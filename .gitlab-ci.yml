stages:
  - build
  - publish

build:
  stage: build
  script:
    - cp .env.example .env
    - yarn install --frozen-lockfile --non-interactive
    - yarn run typecheck
    - yarn run lint
    - yarn run test --ci --coverage --reporters=default --reporters=jest-junit
    - yarn run build
  coverage: '/Statements\s*:\s*(\d+\.\d+)%/'
  tags:
    - nodejs
  artifacts:
    paths:
      - dist/
    reports:
      junit: junit.xml

publish_image:
  stage: publish
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  when: manual
  tags:
    - docker-ce
